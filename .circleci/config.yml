version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - run:
          name: Download dependencies
          command: npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  test:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Run Tests
          command: npm run test
      - run:
          name: Check dist folder
          command: |
            echo "Running npm run build" ;
            npm run build ;
            echo "Running git status" ;
            git status ;
            if git diff --quiet ;
            then
              echo "Success: the build is up-to-date";
            else
              echo "Error: build is not up-to-date" ;
              exit 1
            fi
  auto-build:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3b:d9:54:9b:b2:a9:66:36:49:35:21:7a:57:06:33:bf"
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Rebuild ./dist folder and Commit
          command: |
            npm run build ;
            if git diff --quiet ;
            then
              echo "This build is up-to-date" ;
            else
              echo "The build is not up-to-date" ;
              echo "Commiting updated build to repo" ;
              git config user.email "bot@circleci.com" ;
              git config user.name "CircleCI Bot" ;
              git commit -am "Auto-build from CircleCI [skip ci]"
              git push origin master ;
            fi

workflows:
  version: 2
  build-test-and-autobuild:
    jobs:
      - build
      - test:
          requires:
            - build
      - auto-build:
          requires:
            - build
          filters:
            branches:
              only: master
